name: API Tests (Gradle)   # Nama workflow yang tampil di tab Actions GitHub

on:
  workflow_dispatch:       # Bisa dijalankan manual lewat GitHub Actions UI
  push:                    # Otomatis jalan kalau ada commit/push ke branch main
    branches: [ "main" ]
  pull_request:            # Otomatis jalan kalau ada Pull Request (PR) ke branch main
    branches: [ "main" ]

jobs:
  Api-Rest-Assured:
    runs-on: ubuntu-latest # Runner GitHub (mesin virtual) pakai Ubuntu versi terbaru

    steps:
      # 1️⃣ Checkout source code dari repository GitHub
      #    Tanpa ini, file project tidak tersedia di runner.
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ Setup Java Development Kit (JDK) versi 17
      #    Karena project Gradle + RestAssured + TestNG butuh JDK untuk compile & run test.
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin     # Distribusi JDK open-source yang umum dipakai
          java-version: 17          # Versi Java sesuai konfigurasi build.gradle

      # 3️⃣ Ubah file gradlew jadi executable
      #    Default di Linux, file gradlew belum punya izin execute.
      - name: Grant execute permission for Gradlew
        run: chmod +x gradlew

      # 4️⃣ Jalankan perintah Gradle: clean project lalu jalankan semua test
      #    - "clean" hapus build lama
      #    - "test" jalankan semua test API (RestAssured + TestNG)
      - name: Run Tests with Gradle
        run: ./gradlew clean test

      # 5️⃣ Upload hasil test dalam format XML (JUnit/TestNG)
      #    Cocok untuk analisis lanjutan / integrasi tools lain.
      - name: Upload Test Results (XML)
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: build/test-results/test

      # 6️⃣ Upload hasil test dalam format HTML
      #    Lebih ramah untuk dibaca non-teknis, bisa download & buka di browser.
      - name: Upload HTML Test Report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: build/reports/tests/test

      # 7️⃣ Tambahkan ringkasan hasil build & test di tab Summary
      #    Supaya tim langsung lihat status tanpa scroll log panjang.
      - name: Add Build Summary
        run: |
          echo "## ✅ Build & Test Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Status   : Sukses 🎉" >> $GITHUB_STEP_SUMMARY
          echo "- Test Tool: Gradle + TestNG + RestAssured" >> $GITHUB_STEP_SUMMARY
          echo "- Report   : [Download XML/HTML report](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY
